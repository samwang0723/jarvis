---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jarvis-api
  labels:
    app: jarvis-api
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jarvis-api
      version: v1
  template:
    metadata:
      labels:
        app: jarvis-api
        version: v1
    spec:
      containers:
      - name: application
        image: samwang0723/jarvis-api:v2.0.1
        imagePullPolicy: Always
        ports:
        - name: rest-api-port
          containerPort: 8080
        - name: grpc-port
          containerPort: 8081
        - name: mysql-port
          containerPort: 3306
        - name: redis-port
          containerPort: 6379
        - name: http-port
          containerPort: 80
        - name: https-port
          containerPort: 443
        # define a liveness probe that checks every 5 seconds, starting after 5 seconds
        livenessProbe:
          httpGet:
            path: /live
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        # define a readiness probe that checks every 5 seconds
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          periodSeconds: 5
        resources:
          limits:
            memory: "256Mi"
          requests:
            memory: "128Mi"
        env:
        - name: MY_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ENVIRONMENT
          value: "dev"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: username
        - name: DB_PASSWD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: password
        - name: SMART_PROXY
          valueFrom:
            secretKeyRef:
              name: proxy-secret-smartproxy
              key: token
        - name: REDIS_PASSWD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-password
        - name: JWT_SECRET
          valueFrom:
              secretKeyRef:
                name: jwt-secret
                key: token
