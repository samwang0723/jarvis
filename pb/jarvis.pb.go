// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: jarvis.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDailyCloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset       int32                       `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit        int32                       `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchParams *ListDailyCloseSearchParams `protobuf:"bytes,3,opt,name=searchParams,proto3" json:"searchParams,omitempty"`
}

func (x *ListDailyCloseRequest) Reset() {
	*x = ListDailyCloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jarvis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDailyCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDailyCloseRequest) ProtoMessage() {}

func (x *ListDailyCloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jarvis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDailyCloseRequest.ProtoReflect.Descriptor instead.
func (*ListDailyCloseRequest) Descriptor() ([]byte, []int) {
	return file_jarvis_proto_rawDescGZIP(), []int{0}
}

func (x *ListDailyCloseRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDailyCloseRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDailyCloseRequest) GetSearchParams() *ListDailyCloseSearchParams {
	if x != nil {
		return x.SearchParams
	}
	return nil
}

type ListDailyCloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset     int32         `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit      int32         `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalCount int32         `protobuf:"varint,3,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Entries    []*DailyClose `protobuf:"bytes,4,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ListDailyCloseResponse) Reset() {
	*x = ListDailyCloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jarvis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDailyCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDailyCloseResponse) ProtoMessage() {}

func (x *ListDailyCloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jarvis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDailyCloseResponse.ProtoReflect.Descriptor instead.
func (*ListDailyCloseResponse) Descriptor() ([]byte, []int) {
	return file_jarvis_proto_rawDescGZIP(), []int{1}
}

func (x *ListDailyCloseResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDailyCloseResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDailyCloseResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListDailyCloseResponse) GetEntries() []*DailyClose {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ListDailyCloseSearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockIDs []string `protobuf:"bytes,1,rep,name=stockIDs,proto3" json:"stockIDs,omitempty"`
	Start    string   `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End      string   `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ListDailyCloseSearchParams) Reset() {
	*x = ListDailyCloseSearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jarvis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDailyCloseSearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDailyCloseSearchParams) ProtoMessage() {}

func (x *ListDailyCloseSearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_jarvis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDailyCloseSearchParams.ProtoReflect.Descriptor instead.
func (*ListDailyCloseSearchParams) Descriptor() ([]byte, []int) {
	return file_jarvis_proto_rawDescGZIP(), []int{2}
}

func (x *ListDailyCloseSearchParams) GetStockIDs() []string {
	if x != nil {
		return x.StockIDs
	}
	return nil
}

func (x *ListDailyCloseSearchParams) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *ListDailyCloseSearchParams) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type DailyClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailyCloseID uint64                 `protobuf:"varint,1,opt,name=dailyCloseID,proto3" json:"dailyCloseID,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	StockID      string                 `protobuf:"bytes,5,opt,name=stockID,proto3" json:"stockID,omitempty"`
	Date         string                 `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	TradeShares  uint64                 `protobuf:"varint,7,opt,name=tradeShares,proto3" json:"tradeShares,omitempty"`
	Transactions uint64                 `protobuf:"varint,8,opt,name=transactions,proto3" json:"transactions,omitempty"`
	Turnover     uint64                 `protobuf:"varint,9,opt,name=turnover,proto3" json:"turnover,omitempty"`
	Open         float32                `protobuf:"fixed32,10,opt,name=open,proto3" json:"open,omitempty"`
	Close        float32                `protobuf:"fixed32,11,opt,name=close,proto3" json:"close,omitempty"`
	High         float32                `protobuf:"fixed32,12,opt,name=high,proto3" json:"high,omitempty"`
	Low          float32                `protobuf:"fixed32,13,opt,name=low,proto3" json:"low,omitempty"`
	Diff         float32                `protobuf:"fixed32,14,opt,name=diff,proto3" json:"diff,omitempty"`
}

func (x *DailyClose) Reset() {
	*x = DailyClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jarvis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyClose) ProtoMessage() {}

func (x *DailyClose) ProtoReflect() protoreflect.Message {
	mi := &file_jarvis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyClose.ProtoReflect.Descriptor instead.
func (*DailyClose) Descriptor() ([]byte, []int) {
	return file_jarvis_proto_rawDescGZIP(), []int{3}
}

func (x *DailyClose) GetDailyCloseID() uint64 {
	if x != nil {
		return x.DailyCloseID
	}
	return 0
}

func (x *DailyClose) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DailyClose) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DailyClose) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *DailyClose) GetStockID() string {
	if x != nil {
		return x.StockID
	}
	return ""
}

func (x *DailyClose) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyClose) GetTradeShares() uint64 {
	if x != nil {
		return x.TradeShares
	}
	return 0
}

func (x *DailyClose) GetTransactions() uint64 {
	if x != nil {
		return x.Transactions
	}
	return 0
}

func (x *DailyClose) GetTurnover() uint64 {
	if x != nil {
		return x.Turnover
	}
	return 0
}

func (x *DailyClose) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *DailyClose) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *DailyClose) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *DailyClose) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *DailyClose) GetDiff() float32 {
	if x != nil {
		return x.Diff
	}
	return 0
}

var File_jarvis_proto protoreflect.FileDescriptor

var file_jarvis_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x46, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2c, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x60,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x22, 0xd2, 0x03, 0x0a, 0x0a, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f,
	0x77, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x64, 0x69, 0x66, 0x66, 0x32, 0x5b, 0x0a, 0x06, 0x4a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x12,
	0x51, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x1d, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jarvis_proto_rawDescOnce sync.Once
	file_jarvis_proto_rawDescData = file_jarvis_proto_rawDesc
)

func file_jarvis_proto_rawDescGZIP() []byte {
	file_jarvis_proto_rawDescOnce.Do(func() {
		file_jarvis_proto_rawDescData = protoimpl.X.CompressGZIP(file_jarvis_proto_rawDescData)
	})
	return file_jarvis_proto_rawDescData
}

var file_jarvis_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_jarvis_proto_goTypes = []interface{}{
	(*ListDailyCloseRequest)(nil),      // 0: jarvis.ListDailyCloseRequest
	(*ListDailyCloseResponse)(nil),     // 1: jarvis.ListDailyCloseResponse
	(*ListDailyCloseSearchParams)(nil), // 2: jarvis.ListDailyCloseSearchParams
	(*DailyClose)(nil),                 // 3: jarvis.DailyClose
	(*timestamppb.Timestamp)(nil),      // 4: google.protobuf.Timestamp
}
var file_jarvis_proto_depIdxs = []int32{
	2, // 0: jarvis.ListDailyCloseRequest.searchParams:type_name -> jarvis.ListDailyCloseSearchParams
	3, // 1: jarvis.ListDailyCloseResponse.entries:type_name -> jarvis.DailyClose
	4, // 2: jarvis.DailyClose.createdAt:type_name -> google.protobuf.Timestamp
	4, // 3: jarvis.DailyClose.updatedAt:type_name -> google.protobuf.Timestamp
	4, // 4: jarvis.DailyClose.deletedAt:type_name -> google.protobuf.Timestamp
	0, // 5: jarvis.Jarvis.ListDailyClose:input_type -> jarvis.ListDailyCloseRequest
	1, // 6: jarvis.Jarvis.ListDailyClose:output_type -> jarvis.ListDailyCloseResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_jarvis_proto_init() }
func file_jarvis_proto_init() {
	if File_jarvis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jarvis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDailyCloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jarvis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDailyCloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jarvis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDailyCloseSearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jarvis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jarvis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jarvis_proto_goTypes,
		DependencyIndexes: file_jarvis_proto_depIdxs,
		MessageInfos:      file_jarvis_proto_msgTypes,
	}.Build()
	File_jarvis_proto = out.File
	file_jarvis_proto_rawDesc = nil
	file_jarvis_proto_goTypes = nil
	file_jarvis_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// JarvisClient is the client API for Jarvis service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JarvisClient interface {
	ListDailyClose(ctx context.Context, in *ListDailyCloseRequest, opts ...grpc.CallOption) (*ListDailyCloseResponse, error)
}

type jarvisClient struct {
	cc grpc.ClientConnInterface
}

func NewJarvisClient(cc grpc.ClientConnInterface) JarvisClient {
	return &jarvisClient{cc}
}

func (c *jarvisClient) ListDailyClose(ctx context.Context, in *ListDailyCloseRequest, opts ...grpc.CallOption) (*ListDailyCloseResponse, error) {
	out := new(ListDailyCloseResponse)
	err := c.cc.Invoke(ctx, "/jarvis.Jarvis/ListDailyClose", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JarvisServer is the server API for Jarvis service.
type JarvisServer interface {
	ListDailyClose(context.Context, *ListDailyCloseRequest) (*ListDailyCloseResponse, error)
}

// UnimplementedJarvisServer can be embedded to have forward compatible implementations.
type UnimplementedJarvisServer struct {
}

func (*UnimplementedJarvisServer) ListDailyClose(context.Context, *ListDailyCloseRequest) (*ListDailyCloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDailyClose not implemented")
}

func RegisterJarvisServer(s *grpc.Server, srv JarvisServer) {
	s.RegisterService(&_Jarvis_serviceDesc, srv)
}

func _Jarvis_ListDailyClose_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDailyCloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JarvisServer).ListDailyClose(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jarvis.Jarvis/ListDailyClose",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JarvisServer).ListDailyClose(ctx, req.(*ListDailyCloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jarvis_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jarvis.Jarvis",
	HandlerType: (*JarvisServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDailyClose",
			Handler:    _Jarvis_ListDailyClose_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jarvis.proto",
}
