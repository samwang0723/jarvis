{
  "swagger": "2.0",
  "info": {
    "title": "Javis smart stock analysis API",
    "version": "1.4"
  },
  "tags": [
    {
      "name": "JarvisV1"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/balances": {
      "get": {
        "operationId": "JarvisV1_GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/categories": {
      "get": {
        "operationId": "JarvisV1_ListCategories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/dailycloses": {
      "post": {
        "operationId": "JarvisV1_ListDailyClose",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDailyCloseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListDailyCloseRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/login": {
      "post": {
        "operationId": "JarvisV1_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ],
        "security": []
      }
    },
    "/v1/logout": {
      "post": {
        "operationId": "JarvisV1_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LogoutRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/orders": {
      "post": {
        "operationId": "JarvisV1_ListOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListOrderRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      },
      "put": {
        "operationId": "JarvisV1_CreateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOrderRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/pickedstocks": {
      "get": {
        "operationId": "JarvisV1_ListPickedStocks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPickedStocksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "JarvisV1"
        ]
      },
      "post": {
        "operationId": "JarvisV1_InsertPickedStocks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InsertPickedStocksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InsertPickedStocksRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/pickedstocks/{stockID}": {
      "delete": {
        "operationId": "JarvisV1_DeletePickedStocks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeletePickedStocksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "stockID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/selections": {
      "post": {
        "operationId": "JarvisV1_ListSelections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSelectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSelectionRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/stakeconcentration": {
      "post": {
        "operationId": "JarvisV1_GetStakeConcentration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetStakeConcentrationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetStakeConcentrationRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/stocks": {
      "post": {
        "operationId": "JarvisV1_ListStocks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListStockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListStockRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/threeprimary": {
      "post": {
        "operationId": "JarvisV1_ListThreePrimary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListThreePrimaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListThreePrimaryRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/transactions": {
      "post": {
        "operationId": "JarvisV1_CreateTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTransactionRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "operationId": "JarvisV1_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      },
      "post": {
        "operationId": "JarvisV1_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "JarvisV1"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Balance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "balance": {
          "type": "number",
          "format": "float"
        },
        "available": {
          "type": "number",
          "format": "float"
        },
        "pending": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1CreateOrderRequest": {
      "type": "object",
      "properties": {
        "orderType": {
          "type": "string"
        },
        "stockID": {
          "type": "string"
        },
        "tradePrice": {
          "type": "number",
          "format": "float"
        },
        "quantity": {
          "type": "string",
          "format": "uint64"
        },
        "exchangeDate": {
          "type": "string"
        }
      }
    },
    "v1CreateOrderResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "v1CreateTransactionRequest": {
      "type": "object",
      "properties": {
        "orderType": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1CreateTransactionResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "v1DailyClose": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "stockID": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "tradeShares": {
          "type": "string",
          "format": "uint64"
        },
        "transactions": {
          "type": "string",
          "format": "uint64"
        },
        "turnover": {
          "type": "string",
          "format": "uint64"
        },
        "open": {
          "type": "number",
          "format": "float"
        },
        "close": {
          "type": "number",
          "format": "float"
        },
        "high": {
          "type": "number",
          "format": "float"
        },
        "low": {
          "type": "number",
          "format": "float"
        },
        "diff": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1DeletePickedStocksResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "v1GetBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "$ref": "#/definitions/v1Balance"
        }
      }
    },
    "v1GetStakeConcentrationRequest": {
      "type": "object",
      "properties": {
        "stockID": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "v1GetStakeConcentrationResponse": {
      "type": "object",
      "properties": {
        "stakeConcentration": {
          "$ref": "#/definitions/v1StakeConcentration"
        }
      }
    },
    "v1InsertPickedStocksRequest": {
      "type": "object",
      "properties": {
        "stockIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1InsertPickedStocksResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "v1ListCategoriesResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListDailyCloseRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "searchParams": {
          "$ref": "#/definitions/v1ListDailyCloseSearchParams"
        }
      }
    },
    "v1ListDailyCloseResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DailyClose"
          }
        }
      }
    },
    "v1ListDailyCloseSearchParams": {
      "type": "object",
      "properties": {
        "stockID": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        }
      }
    },
    "v1ListOrderRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "searchParams": {
          "$ref": "#/definitions/v1ListOrderSearchParams"
        }
      }
    },
    "v1ListOrderResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Order"
          }
        }
      }
    },
    "v1ListOrderSearchParams": {
      "type": "object",
      "properties": {
        "stockIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exchangeMonth": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1ListPickedStocksResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Selection"
          }
        }
      }
    },
    "v1ListSelectionRequest": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "strict": {
          "type": "boolean"
        }
      }
    },
    "v1ListSelectionResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Selection"
          }
        }
      }
    },
    "v1ListStockRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "searchParams": {
          "$ref": "#/definitions/v1ListStockSearchParams"
        }
      }
    },
    "v1ListStockResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Stock"
          }
        }
      }
    },
    "v1ListStockSearchParams": {
      "type": "object",
      "properties": {
        "stockIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "country": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        }
      }
    },
    "v1ListThreePrimaryRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "searchParams": {
          "$ref": "#/definitions/v1ListThreePrimarySearchParams"
        }
      }
    },
    "v1ListThreePrimaryResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ThreePrimary"
          }
        }
      }
    },
    "v1ListThreePrimarySearchParams": {
      "type": "object",
      "properties": {
        "stockID": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        }
      }
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1LoginResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        }
      }
    },
    "v1LogoutRequest": {
      "type": "object"
    },
    "v1LogoutResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "v1Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "stockID": {
          "type": "string"
        },
        "buyPrice": {
          "type": "number",
          "format": "float"
        },
        "sellPrice": {
          "type": "number",
          "format": "float"
        },
        "buyQuantity": {
          "type": "string",
          "format": "uint64"
        },
        "sellQuantity": {
          "type": "string",
          "format": "uint64"
        },
        "buyExchangeDate": {
          "type": "string"
        },
        "sellExchangeDate": {
          "type": "string"
        },
        "profitablePrice": {
          "type": "number",
          "format": "float"
        },
        "profitLoss": {
          "type": "number",
          "format": "float"
        },
        "profitLossPercent": {
          "type": "number",
          "format": "float"
        },
        "stockName": {
          "type": "string"
        },
        "currentPrice": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1Selection": {
      "type": "object",
      "properties": {
        "stockID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "concentration1": {
          "type": "number",
          "format": "float"
        },
        "concentration5": {
          "type": "number",
          "format": "float"
        },
        "concentration10": {
          "type": "number",
          "format": "float"
        },
        "concentration20": {
          "type": "number",
          "format": "float"
        },
        "concentration60": {
          "type": "number",
          "format": "float"
        },
        "volume": {
          "type": "integer",
          "format": "int32"
        },
        "foreign": {
          "type": "integer",
          "format": "int32"
        },
        "trust": {
          "type": "integer",
          "format": "int32"
        },
        "dealer": {
          "type": "integer",
          "format": "int32"
        },
        "hedging": {
          "type": "integer",
          "format": "int32"
        },
        "open": {
          "type": "number",
          "format": "float"
        },
        "close": {
          "type": "number",
          "format": "float"
        },
        "high": {
          "type": "number",
          "format": "float"
        },
        "low": {
          "type": "number",
          "format": "float"
        },
        "diff": {
          "type": "number",
          "format": "float"
        },
        "trust10": {
          "type": "integer",
          "format": "int32"
        },
        "foreign10": {
          "type": "integer",
          "format": "int32"
        },
        "quoteChange": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1StakeConcentration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "stockID": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "sumBuyShares": {
          "type": "string",
          "format": "uint64"
        },
        "sumSellShares": {
          "type": "string",
          "format": "uint64"
        },
        "avgBuyPrice": {
          "type": "number",
          "format": "float"
        },
        "avgSellPrice": {
          "type": "number",
          "format": "float"
        },
        "concentration1": {
          "type": "number",
          "format": "float"
        },
        "concentration5": {
          "type": "number",
          "format": "float"
        },
        "concentration10": {
          "type": "number",
          "format": "float"
        },
        "concentration20": {
          "type": "number",
          "format": "float"
        },
        "concentration60": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1Stock": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "stockID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "market": {
          "type": "string"
        }
      }
    },
    "v1ThreePrimary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "stockID": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "foreignTradeShares": {
          "type": "string",
          "format": "int64"
        },
        "trustTradeShares": {
          "type": "string",
          "format": "int64"
        },
        "dealerTradeShares": {
          "type": "string",
          "format": "int64"
        },
        "hedgingTradeShares": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
