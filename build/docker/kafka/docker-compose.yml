version: '3.9'

services:
  kafka:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      # KRaft settings
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=MYeBe-RHQ3qDDAHDex_0xA
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      # - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      # - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    restart: unless-stopped
    networks:
      - jarvis-infra
    # create kafka raw topic
  kafka-init:
    image: docker.io/bitnami/kafka:3.7
    networks:
      - jarvis-infra
    command: [ "/bin/bash", "-c", "/create_topic.sh"]
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - type: bind
        source: ./create_topic.sh
        target: /create_topic.sh
    init: true
volumes:
  kafka_data:
    driver: local
networks:
  jarvis-infra:
    driver: bridge
